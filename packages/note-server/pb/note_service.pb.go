// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: note_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LinkedNotes   []*Note                `protobuf:"bytes,6,rep,name=linked_notes,json=linkedNotes,proto3" json:"linked_notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_note_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{0}
}

func (x *Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Note) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Note) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Note) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Note) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Note) GetLinkedNotes() []*Note {
	if x != nil {
		return x.LinkedNotes
	}
	return nil
}

// *
// ================================ CREATE ================================
type CreateNoteRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Title            string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content          string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Tags             []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	LinkedNoteTitles []string               `protobuf:"bytes,4,rep,name=linked_note_titles,json=linkedNoteTitles,proto3" json:"linked_note_titles,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_note_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateNoteRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateNoteRequest) GetLinkedNoteTitles() []string {
	if x != nil {
		return x.LinkedNoteTitles
	}
	return nil
}

type CreateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteResponse) Reset() {
	*x = CreateNoteResponse{}
	mi := &file_note_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteResponse) ProtoMessage() {}

func (x *CreateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

// *
// ================================ GET ================================
type GetNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteRequest) Reset() {
	*x = GetNoteRequest{}
	mi := &file_note_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteRequest) ProtoMessage() {}

func (x *GetNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteRequest.ProtoReflect.Descriptor instead.
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoteResponse) Reset() {
	*x = GetNoteResponse{}
	mi := &file_note_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteResponse) ProtoMessage() {}

func (x *GetNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteResponse.ProtoReflect.Descriptor instead.
func (*GetNoteResponse) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

// *
// ================================ LIST ================================
type ListNotesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesRequest) Reset() {
	*x = ListNotesRequest{}
	mi := &file_note_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesRequest) ProtoMessage() {}

func (x *ListNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesRequest.ProtoReflect.Descriptor instead.
func (*ListNotesRequest) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{5}
}

type ListNotesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []*Note                `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotesResponse) Reset() {
	*x = ListNotesResponse{}
	mi := &file_note_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotesResponse) ProtoMessage() {}

func (x *ListNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotesResponse.ProtoReflect.Descriptor instead.
func (*ListNotesResponse) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListNotesResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

// *
// ================================ UPDATE ================================
type UpdateNoteRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Title            string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content          string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Tags             []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	LinkedNoteTitles []string               `protobuf:"bytes,4,rep,name=linked_note_titles,json=linkedNoteTitles,proto3" json:"linked_note_titles,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	mi := &file_note_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateNoteRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateNoteRequest) GetLinkedNoteTitles() []string {
	if x != nil {
		return x.LinkedNoteTitles
	}
	return nil
}

type UpdateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteResponse) Reset() {
	*x = UpdateNoteResponse{}
	mi := &file_note_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteResponse) ProtoMessage() {}

func (x *UpdateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateNoteResponse) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

// *
// ================================ DELETE ================================
type DeleteNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_note_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DeleteNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteResponse) Reset() {
	*x = DeleteNoteResponse{}
	mi := &file_note_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteResponse) ProtoMessage() {}

func (x *DeleteNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_note_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoteResponse) Descriptor() ([]byte, []int) {
	return file_note_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNoteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_note_service_proto protoreflect.FileDescriptor

const file_note_service_proto_rawDesc = "" +
	"\n" +
	"\x12note_service.proto\x12\vnoteservice\"\xbe\x01\n" +
	"\x04Note\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\x03R\tupdatedAt\x124\n" +
	"\flinked_notes\x18\x06 \x03(\v2\x11.noteservice.NoteR\vlinkedNotes\"\x85\x01\n" +
	"\x11CreateNoteRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12,\n" +
	"\x12linked_note_titles\x18\x04 \x03(\tR\x10linkedNoteTitles\";\n" +
	"\x12CreateNoteResponse\x12%\n" +
	"\x04note\x18\x01 \x01(\v2\x11.noteservice.NoteR\x04note\"&\n" +
	"\x0eGetNoteRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\"8\n" +
	"\x0fGetNoteResponse\x12%\n" +
	"\x04note\x18\x01 \x01(\v2\x11.noteservice.NoteR\x04note\"\x12\n" +
	"\x10ListNotesRequest\"<\n" +
	"\x11ListNotesResponse\x12'\n" +
	"\x05notes\x18\x01 \x03(\v2\x11.noteservice.NoteR\x05notes\"\x85\x01\n" +
	"\x11UpdateNoteRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12,\n" +
	"\x12linked_note_titles\x18\x04 \x03(\tR\x10linkedNoteTitles\";\n" +
	"\x12UpdateNoteResponse\x12%\n" +
	"\x04note\x18\x01 \x01(\v2\x11.noteservice.NoteR\x04note\")\n" +
	"\x11DeleteNoteRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\".\n" +
	"\x12DeleteNoteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x8c\x03\n" +
	"\vNoteService\x12M\n" +
	"\n" +
	"CreateNote\x12\x1e.noteservice.CreateNoteRequest\x1a\x1f.noteservice.CreateNoteResponse\x12D\n" +
	"\aGetNote\x12\x1b.noteservice.GetNoteRequest\x1a\x1c.noteservice.GetNoteResponse\x12J\n" +
	"\tListNotes\x12\x1d.noteservice.ListNotesRequest\x1a\x1e.noteservice.ListNotesResponse\x12M\n" +
	"\n" +
	"UpdateNote\x12\x1e.noteservice.UpdateNoteRequest\x1a\x1f.noteservice.UpdateNoteResponse\x12M\n" +
	"\n" +
	"DeleteNote\x12\x1e.noteservice.DeleteNoteRequest\x1a\x1f.noteservice.DeleteNoteResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_note_service_proto_rawDescOnce sync.Once
	file_note_service_proto_rawDescData []byte
)

func file_note_service_proto_rawDescGZIP() []byte {
	file_note_service_proto_rawDescOnce.Do(func() {
		file_note_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_note_service_proto_rawDesc), len(file_note_service_proto_rawDesc)))
	})
	return file_note_service_proto_rawDescData
}

var file_note_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_note_service_proto_goTypes = []any{
	(*Note)(nil),               // 0: noteservice.Note
	(*CreateNoteRequest)(nil),  // 1: noteservice.CreateNoteRequest
	(*CreateNoteResponse)(nil), // 2: noteservice.CreateNoteResponse
	(*GetNoteRequest)(nil),     // 3: noteservice.GetNoteRequest
	(*GetNoteResponse)(nil),    // 4: noteservice.GetNoteResponse
	(*ListNotesRequest)(nil),   // 5: noteservice.ListNotesRequest
	(*ListNotesResponse)(nil),  // 6: noteservice.ListNotesResponse
	(*UpdateNoteRequest)(nil),  // 7: noteservice.UpdateNoteRequest
	(*UpdateNoteResponse)(nil), // 8: noteservice.UpdateNoteResponse
	(*DeleteNoteRequest)(nil),  // 9: noteservice.DeleteNoteRequest
	(*DeleteNoteResponse)(nil), // 10: noteservice.DeleteNoteResponse
}
var file_note_service_proto_depIdxs = []int32{
	0,  // 0: noteservice.Note.linked_notes:type_name -> noteservice.Note
	0,  // 1: noteservice.CreateNoteResponse.note:type_name -> noteservice.Note
	0,  // 2: noteservice.GetNoteResponse.note:type_name -> noteservice.Note
	0,  // 3: noteservice.ListNotesResponse.notes:type_name -> noteservice.Note
	0,  // 4: noteservice.UpdateNoteResponse.note:type_name -> noteservice.Note
	1,  // 5: noteservice.NoteService.CreateNote:input_type -> noteservice.CreateNoteRequest
	3,  // 6: noteservice.NoteService.GetNote:input_type -> noteservice.GetNoteRequest
	5,  // 7: noteservice.NoteService.ListNotes:input_type -> noteservice.ListNotesRequest
	7,  // 8: noteservice.NoteService.UpdateNote:input_type -> noteservice.UpdateNoteRequest
	9,  // 9: noteservice.NoteService.DeleteNote:input_type -> noteservice.DeleteNoteRequest
	2,  // 10: noteservice.NoteService.CreateNote:output_type -> noteservice.CreateNoteResponse
	4,  // 11: noteservice.NoteService.GetNote:output_type -> noteservice.GetNoteResponse
	6,  // 12: noteservice.NoteService.ListNotes:output_type -> noteservice.ListNotesResponse
	8,  // 13: noteservice.NoteService.UpdateNote:output_type -> noteservice.UpdateNoteResponse
	10, // 14: noteservice.NoteService.DeleteNote:output_type -> noteservice.DeleteNoteResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_note_service_proto_init() }
func file_note_service_proto_init() {
	if File_note_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_note_service_proto_rawDesc), len(file_note_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_note_service_proto_goTypes,
		DependencyIndexes: file_note_service_proto_depIdxs,
		MessageInfos:      file_note_service_proto_msgTypes,
	}.Build()
	File_note_service_proto = out.File
	file_note_service_proto_goTypes = nil
	file_note_service_proto_depIdxs = nil
}
